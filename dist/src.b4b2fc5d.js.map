{"version":3,"sources":["js/renderOperations.js","data.json","js/getRefs.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","index.js"],"names":["categoryMarkupEl","data","editNoteId","taskActiveEl","taskArchiivedEl","randomeActiveEl","randomeArchiivedEl","ideaActiveEl","ideaArchiivedEl","quoteActiveEl","quoteArchiivedEl","noteName","activeEl","archivedEl","map","el","cart","length","head","lamp","quotes","id","join","markupEl","document","getElementById","classList","remove","category","name","created","—Åontent","dates","pencil","archive","bin","archivedMarkupEl","module","exports","icon","isActive","getRefs","tbodyEl","querySelector","form","createBtn","modal","categoryEl","editId","shortid","require","activeNotes","archivedNotes","taskItemActive","taskItemArch","randomeItemActive","randomeItemArch","ideaItemActive","ideaItemArch","quoteItemActive","quoteItemArch","on","refs","filterByStatus","notes","push","addEventListener","onFormSubmit","onCreateClick","onFormClick","window","onClick","notesMarkup","filterByCategories","mas","result","filter","item","index","arr","indexOf","forEach","renderCategories","e","preventDefault","makeEmptyAllArr","generate","target","value","Date","toLocaleDateString","match","categDateValue","renderActiveNotes","add","alt","onEditNote","onArchiveNote","parentElement","onRemoveNote","toString","children","textContent","onOpenModal","className","splice","findIndex","onCloseModal","onArchiveRender","onActiveRender","innerHTML","insertAdjacentHTML","newNotesMarkup"],"mappings":"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","file":"src.b4b2fc5d.js","sourceRoot":"../src","sourcesContent":["import cart from '../images/cart.png';\nimport head from '../images/head.png';\nimport lamp from '../images/lamp.png';\nimport quotes from '../images/quotes.png';\nimport pencil from '../images/pencil.png';\nimport archive from '../images/archive.png';\nimport bin from '../images/bin.png';\n\nexport function categoryMarkupEl(\n  data,\n  editNoteId,\n  taskActiveEl,\n  taskArchiivedEl,\n  randomeActiveEl,\n  randomeArchiivedEl,\n  ideaActiveEl,\n  ideaArchiivedEl,\n  quoteActiveEl,\n  quoteArchiivedEl,\n) {\n  let noteName = '';\n  let activeEl = '';\n  let archivedEl = '';\n\n  return data\n    .map(el => {\n      switch (el) {\n        case 'Task':\n          noteName = cart;\n          activeEl = taskActiveEl.length;\n          archivedEl = taskArchiivedEl.length;\n          break;\n        case 'Random Thought':\n          noteName = head;\n          activeEl = randomeActiveEl.length;\n          archivedEl = randomeArchiivedEl.length;\n          break;\n        case 'Idea':\n          noteName = lamp;\n          activeEl = ideaActiveEl.length;\n          archivedEl = ideaArchiivedEl.length;\n          break;\n        case 'Quote':\n          noteName = quotes;\n          activeEl = quoteActiveEl.length;\n          archivedEl = quoteArchiivedEl.length;\n          break;\n        default:\n          noteName = cart;\n          break;\n      }\n      return `<tr id=\"${el.id}\" class='archived'>\n  <td><img class=\"noteIcon\" src='${noteName}' alt='noteName' width='30' height='30' /></td>\n  <td>${el}</td>\n  <td>${activeEl}</td>\n  <td>${archivedEl}</td>\n  \n  \n</tr>`;\n    })\n    .join('');\n}\n\nexport function markupEl(data) {\n  let noteName = '';\n\n  const btnSub = document.getElementById('sbtBtn');\n  btnSub.classList.remove('isHidden');\n\n  return data\n    .map(el => {\n      switch (el.category) {\n        case 'Task':\n          noteName = cart;\n          break;\n        case 'Random Thought':\n          noteName = head;\n          break;\n        case 'Idea':\n          noteName = lamp;\n          break;\n        case 'Quote':\n          noteName = quotes;\n          break;\n        default:\n          noteName = cart;\n          break;\n      }\n      return `<tr id=\"${el.id}\" class='active'>\n  <td><img class=\"noteIcon\" src='${noteName}' alt='noteName' width='30' height='30' /></td>\n  <td>${el.name}</td>\n  <td>${el.created}</td>\n  <td>${el.category}</td>\n  <td>${el.—Åontent}</td>\n  <td>${el.dates}</td>\n  <td><img  src='${pencil}' alt='pencil' width='30' height='30' /></td>\n  <td><img  src='${archive}' alt='archive' width='30' height='30' /></td>\n  <td><img  src=\"${bin}\" alt='bin' width='30' height='30' /></td>\n</tr>`;\n    })\n    .join('');\n}\n\nexport function archivedMarkupEl(data) {\n  let noteName = '';\n  return data\n    .map(el => {\n      switch (el.category) {\n        case 'Task':\n          noteName = cart;\n          break;\n        case 'Random Thought':\n          noteName = head;\n          break;\n        case 'Idea':\n          noteName = lamp;\n          break;\n        case 'Quote':\n          noteName = quotes;\n          break;\n        default:\n          noteName = cart;\n          break;\n      }\n      return `<tr id=\"${el.id}\" class='archived'>\n  <td><img class=\"noteIcon\" src='${noteName}' alt='noteName' width='30' height='30' /></td>\n  <td>${el.name}</td>\n  <td>${el.created}</td>\n  <td>${el.category}</td>\n  <td>${el.—Åontent}</td>\n  <td>${el.dates}</td>\n  <td><img  src='${pencil}' alt='pencil' width='30' height='30' /></td>\n  <td><img  src='${archive}' alt='archive' width='30' height='30' />Archived</td>\n  <td><img  src=\"${bin}\" alt='bin' width='30' height='30' /></td>\n</tr>`;\n    })\n    .join('');\n}\n","module.exports=[{id:\"1\",icon:\"/images/cart.png\",name:\"Shopping list\",category:\"Task\",created:\"April 20, 2021\",\"—Åontent\":\"Tomatoes, bread\",dates:[],isActive:\"true\"},{id:\"2\",icon:\"/cart.6b493076.png\",name:\"The theory of evolution\",category:\"Random Thought\",created:\"April 27, 2021\",\"—Åontent\":\"The evolution...\",dates:[\"3/05/2021, 5/05/2021\"],isActive:\"true\"},{id:\"3\",icon:\"./images/cart.png\",name:\"New Feature\",category:\"Idea\",created:\"May 05, 2021\",\"—Åontent\":\"Implement new...\",dates:[],isActive:\"true\"},{id:\"4\",icon:\"./images/cart.png\",name:\"William Gaddis\",category:\"Quote\",created:\"May 07, 2022\",\"—Åontent\":\"Power doesn't co...\",dates:[],isActive:\"true\"},{id:\"5\",icon:\"./images/cart.png\",name:\"Books\",category:\"Task\",created:\"May 15, 2021\",\"—Åontent\":\"The Lean Startup\",dates:[],isActive:\"true\"},{id:\"6\",icon:\"./images/cart.png\",name:\"Parker\",category:\"Task\",created:\"May 17, 2021\",\"—Åontent\":\"Power doesn't co...\",dates:[],isActive:\"false\"},{id:\"7\",icon:\"./images/cart.png\",name:\"Jordan\",category:\"Quote\",created:\"January 03, 2022\",\"—Åontent\":\"Implement new...\",dates:[],isActive:\"false\"}];","export default function getRefs() {\n    return {\n        tbodyEl: document.querySelector('tbody'),\n        form: document.querySelector('form'),\n        createBtn: document.querySelector('.createBtn'),\n        modal: document.querySelector('.backdrop'),\n        categoryEl: document.querySelector('.categoryEl'),\n     \n    };\n  }","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can‚Äôt use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import './sass/main.scss';\nimport { categoryMarkupEl, markupEl, archivedMarkupEl } from './js/renderOperations';\nimport notes from './data.json';\nimport getRefs from \"./js//getRefs\";\n\n\nconst shortid = require('shortid');\nconst activeNotes = [];\nconst archivedNotes = [];\n\nlet editId;\nlet taskItemActive = [];\nlet taskItemArch = [];\nlet randomeItemActive = [];\nlet randomeItemArch = [];\nlet ideaItemActive = [];\nlet ideaItemArch = [];\nlet quoteItemActive = [];\nlet quoteItemArch = [];\nlet on = 'true';\n\nconst refs = getRefs();\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.createBtn.addEventListener('click', onCreateClick);\nrefs.tbodyEl.addEventListener('click', onFormClick);\nwindow.addEventListener('click', onClick);\n\nfunction filterByStatus(notes) {\n  notes.map(el => {\n    if (el.isActive === 'true') {\n      activeNotes.push(el);\n    } else {\n      archivedNotes.push(el);\n    }\n  });\n}\n\nfilterByStatus(notes);\n\nconst notesMarkup = markupEl(activeNotes);\n\nrenderActiveNotes(notesMarkup);\n\nfilterByCategories(activeNotes, archivedNotes);\n\nfunction filterByCategories(activeNotes, archivedNotes) {\n  const mas = [...activeNotes, ...archivedNotes];\n  const result = mas\n    .map(el => el.category)\n    .filter((item, index, arr) => {\n      return arr.indexOf(item) === index;\n    });\n\n  activeNotes.forEach(el => {\n    switch (el.category) {\n      case 'Task':\n        taskItemActive.push(el);\n        break;\n      case 'Random Thought':\n        randomeItemActive.push(el);\n        break;\n      case 'Idea':\n        ideaItemActive.push(el);\n        break;\n      case 'Quote':\n        quoteItemActive.push(el);\n        break;\n      default:\n        break;\n    }\n  });\n\n  archivedNotes.forEach(el => {\n    switch (el.category) {\n      case 'Task':\n        taskItemArch.push(el);\n        break;\n      case 'Random Thought':\n        randomeItemArch.push(el);\n        break;\n      case 'Idea':\n        ideaItemArch.push(el);\n        break;\n      case 'Quote':\n        quoteItemArch.push(el);\n        break;\n      default:\n        break;\n    }\n  });\n\n  const notesMarkup = categoryMarkupEl(\n    result,\n    editId,\n    taskItemActive,\n    taskItemArch,\n    randomeItemActive,\n    randomeItemArch,\n    ideaItemActive,\n    ideaItemArch,\n    quoteItemActive,\n    quoteItemArch,\n  );\n\n  renderCategories(notesMarkup);\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  makeEmptyAllArr();\n\n  if (!editId) {\n    activeNotes.push({\n      id: shortid.generate(),\n      name: e.target[0].value,\n      category: e.target[1].value,\n      created: new Date().toLocaleDateString(),\n      —Åontent: e.target[2].value,\n      dates: e.target[2].value.match(/\\b\\d+.|\\/|-\\d+.|\\/|-\\d+\\b/g)\n        ? [e.target[2].value.match(/\\b\\d+.|\\/|-\\d+.|\\/|-\\d+\\b/g).join('')]\n        : [],\n      isActive: 'true',\n    });\n  }\n\n  activeNotes.forEach(el => {\n    if (el.id === editId) {\n      el.name = document.getElementById('fname').value;\n      el.category = document.getElementById('category').value;\n      el.—Åontent = document.getElementById('—Åontent').value;\n      const categDateValue = document\n        .getElementById('—Åontent')\n        .value.match(/\\b\\d+.|\\/|-\\d+.|\\/|-\\d+\\b/g);\n\n      if (categDateValue) {\n        el.dates.push(categDateValue.join(''));\n      }\n    }\n  });\n\n  const newNotesMarkup = markupEl(activeNotes);\n\n  renderActiveNotes(newNotesMarkup);\n\n  filterByCategories(activeNotes, archivedNotes);\n}\n\nfunction onCreateClick() {\n  editId = '';\n  refs.modal.classList.add('isOpen');\n}\n\nfunction onFormClick(e) {\n  if (!e.target.alt) {\n    return;\n  }\n\n  switch (e.target.alt) {\n    case 'pencil':\n      onEditNote(e);\n      break;\n    case 'archive':\n      onArchiveNote(e.target.parentElement.parentElement);\n      break;\n    case 'bin':\n      onRemoveNote(e.target.parentElement.parentElement);\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction onEditNote(e) {\n  editId = e.target.parentElement.parentElement.id.toString();\n\n  document.getElementById('fname').value =\n    e.target.parentElement.parentElement.children[1].textContent;\n  document.getElementById('—Åontent').value =\n    e.target.parentElement.parentElement.children[4].textContent;\n    onOpenModal(e)\n}\n\nfunction onArchiveNote(e) {\n  makeEmptyAllArr();\n\n  if (e.className === 'active') {\n    activeNotes.forEach((el, index) => {\n      if (el.id === e.id) {\n        if (el.isActive === 'true') {\n          el.isActive = 'false';\n          archivedNotes.push(el);\n          activeNotes.splice(index, 1);\n\n          const notesMarkup = markupEl(activeNotes);\n          renderActiveNotes(notesMarkup);\n        }\n      }\n    });\n  }\n\n  if (e.className === 'archived') {\n    archivedNotes.forEach((el, index) => {\n      if (el.id === e.id) {\n        if (el.isActive === 'false') {\n          el.isActive = 'true';\n          activeNotes.push(el);\n          archivedNotes.splice(index, 1);\n\n          const notesMarkup = archivedMarkupEl(archivedNotes);\n          renderActiveNotes(notesMarkup);\n        }\n      }\n    });\n  }\n  filterByCategories(activeNotes, archivedNotes);\n}\n\nfunction onRemoveNote({ id }) {\n  makeEmptyAllArr();\n\n  const index = activeNotes.findIndex(el => el.id === id);\n  if (index !== -1) {\n    activeNotes.splice(index, 1);\n  }\n  const delNotes = markupEl(activeNotes);\n  renderActiveNotes(delNotes);\n\n  filterByCategories(activeNotes, archivedNotes);\n}\n\nfunction onClick(e) {\n  if (e.target === refs.modal) {\n    onCloseModal(e);\n  }\n  if (e.target === document.getElementById('archiveId')) {\n    on === 'true' ? onArchiveRender(e) : onActiveRender(activeNotes);\n  }\n}\n\nfunction onCloseModal(e) {\n  refs.modal.classList.remove('isOpen');\n}\n\nfunction onOpenModal(e) {\n  refs.modal.classList.add('isOpen');\n}\n\nfunction renderCategories(notesMarkup) {\n  refs.categoryEl.innerHTML = '';\n  refs.categoryEl.insertAdjacentHTML('beforeend', notesMarkup);\n}\n\nfunction onArchiveRender(e) {\n  on = 'false';\n  const btnSub = document.getElementById('sbtBtn');\n  btnSub.classList.add('isHidden');\n\n  const notesMarkup = archivedMarkupEl(archivedNotes);\n  renderActiveNotes(notesMarkup);\n}\n\nfunction onActiveRender(e) {\n  on = 'true';\n\n  const notesMarkup = markupEl(activeNotes);\n  renderActiveNotes(notesMarkup);\n}\n\nfunction renderActiveNotes(newNotesMarkup) {\n  refs.tbodyEl.innerHTML = '';\n  refs.tbodyEl.insertAdjacentHTML('beforeend', newNotesMarkup);\n  onCloseModal();\n}\n\nfunction makeEmptyAllArr() {\n  taskItemActive = [];\n  taskItemArch = [];\n  randomeItemActive = [];\n  randomeItemArch = [];\n  ideaItemActive = [];\n  ideaItemArch = [];\n  quoteItemActive = [];\n  quoteItemArch = [];\n}\n"]}